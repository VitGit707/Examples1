// Example013_RecusionAlgoritm !!!
// Console.WriteLine("Example013_RecusionAlgoritm !!!");

/* Theori ДВУМЕРНЫЙ МАССИВ
*/

/* ЗАПОМНИМ КАК ПИШЕТСЯ ДВУМЕРНЫЙ МАССИВ:

// int[,] matrix = new int[3, 4];
// Обязат пишем тип данных int
// Квадр скобки обязат с запятой внутри [,] 
// Наименование массива matrix 
// Оператор присваивания = 
// Условия new 
// Тип данных int
// В скобках [Строки 3 либо matrix.GetLength(0), Столбцы 4 либо matrix.GetLength(1)] 
*/

// string[,] table = new string[2, 5];
// // String.Empty - Инициализ строк происх с пом этой константы
// // table [0, 0] table [0, 1] table [0, 2] table [0, 3] table [0, 3]
// // table [1, 0] table [1, 1] table [1, 2] table [1, 3] table [1, 4]

// table[1, 2] = "слово"; // мы указ наим массива table [1 - кол строк, 2 кол столбцов] = дальше указ обыч перменую

// for (int rows = 0; rows < 2; rows++) // Здесь нам потребуется цикл в цикле
// {  // для распечатки нашего массива потребуется 2 цикла (цикл в цикле)
//     for (int columns = 0; columns < 5; columns++)
//     {
//         Console.WriteLine($"-{table[rows, columns]}-");
//     }  
// }

/* Опишем метод, который будет печатать двумерную матрицу? и заполнять ее числами
void PrintArray(int[,] matr)
{
    for (int i = 0; i < matr.GetLength(0); i++)  // Вместо i < 3
    {
        for (int j = 0; j < matr.GetLength(1); j++) // Вместо j < 4
        {
            Console.Write($"{matr[i, j]} "); 
        }
        Console.WriteLine();
    }

}
*/
/* Опишем доп метод, который будет заполнять нашу матрицу случайными числами

void FillArray(int[,] matr)
{
    for (int i = 0; i < matr.GetLength(0); i++)
    {
        for (int j = 0; j < matr.GetLength(1); j++)
        {
            matr[i, j] = new Random().Next(1, 10); // [1; 10) Пишем через использв генерато псевдослуч чисел
        }
    }
}

int[,] matrix = new int[3, 4];

PrintArray(matrix); //Снач при распечатке убедимся что у нас распечатыв 0 нолики, после этого
FillArray(matrix); //После этого сделаем FillArray в качест аргум переда наш массив (matrix)
Console.WriteLine();
PrintArray(matrix);// Снова распечатаем
*/

// int[,] public = new int[,]
// 0 - незакрашенный пиксель
// 1 - закрашенный пиксель
// Как закрасить область?
/* Пример рекрсии Как представить черно-белое изображение:
int[,] public = new int[,]
{
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
}

void PrintImage(int[,] image)
{
    for (int i = 0; i < image.GetLength(0); i++)  // Вместо i < 3
    {
        for (int j = 0; j < image.GetLength(1); j++) // Вместо j < 4
        {
            // Console.Write($"{image[i, j]} ");
            if(image[i,j] == 0) Console.Write($" "); // Если image[i,j] == 0 Мы печат пробел Console.Write($" ")
            else Console.Write($"+");

        }
        Console.WriteLine();
    }

}

PrintImage (pic);

void FillImage(int row, int col)
{
    if (pic[row, col] == 0)
    {
        pic[row, col] == 1;
        FillImage (row -1, col);
        FillImage (row , col -1);
        FillImage (row + 1, col);
        FillImage (row, col + 1);
    }
}

PrintImage(pic); 
FillImage(13, 13);
PrintImage(pic);
*/

// РЕКУРСИЯ - ЭТО ФУНКЦИЯ, КОТОРАЯ ВЫЗЫВАЕТ САМА СЕБЯ

// ФАКТОРИАЛ
// 5! = 5*4*3*2*1
//      5*4!
//        4*3!
//          3*2!

/* Пример Рекурсии:  ВЫЧИСЛЕНИЕ ФАКТОРИАЛА
double Factorial (int n)
{
    // 1! = 1
    // 0! = 1
    if(n == 1) return 1;
    else return n * Factorial(n-1); // Factorial(n-1) - Факториал предыдущего числа
}
for (int i = 1; i<40; i++)
{
    Console.WriteLine($"{i}! = {Factorial(i)}"); 
}
*/

// Пример Рекурсии ВЫЧИСЛЕНИЕ ЧИСЕЛ ФИБОНАЧИ

// f(1) = 1
// f(2) = 1
// f(n) = f(n-1) + f(n-2)
/* int Fibonacci (int n)  возвращается  integer-значение
{
    if(n==1 || n == 2) return 1;
    else return Fibonacci (n - 1) + Fibonacci (n - 2);
}

for (int i = 1; i < 10; i++)
{
    Console.WriteLine(Fibonacci(i));
}
*/

/* Давайте попробуем посчитать первые 50 чисел ФИБОНАЧЧИ так,
// чтобы возвращалось double-значение.

double Fibonacci (int n)
{
    if(n==1 || n == 2) return 1;
    else return Fibonacci (n - 1) + Fibonacci (n - 2);
}

for (int i = 1; i < 50; i++)
{
    Console.WriteLine($"f({i}) = {Fibonacci(i)}");
}
*/
/*ИТОГИ 
* ЦИКЛОВ МНОГО НЕ БЫВАЕТ И ДВУМЕРНЫЕ МАССИВЫ ТОМУ ПОДТВЕРЖДЕНИЕ
* МАССИВОВ МНОГО НЕ БЫВАЕТ
* УГЛУБЛЕНИЕ В МЕТОДЫ И ПРАКТИЧЕСКАЯ РЕКУРСИЯ
*/


